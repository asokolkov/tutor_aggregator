<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>disable</Nullable>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <SpaProxyServerUrl>https://localhost:44454</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Windows</DockerDefaultTargetOS>
        <UserSecretsId>e38baa42-c0ad-4295-8b6d-aaa59a2bdd2e</UserSecretsId>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="12.0.0" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.0" />
        <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="11.5.2" />
        <PackageReference Include="JetBrains.Annotations" Version="2022.1.0" />
        <PackageReference Include="MediatR" Version="11.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="6.0.11" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.OAuth" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="6.0.11" />
        <PackageReference Include="Microsoft.AspNetCore.Authorization" Version="6.0.10" />
        <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.10" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.32" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.16" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.10" />
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.0" />
        <PackageReference Include="NCrontab" Version="3.3.1" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
        <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.4.0" />
        <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" Version="6.5.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <Folder Include="Application\Avatars\Queries" />
        <Folder Include="Application\Users\Queries" />
    </ItemGroup>

    <ItemGroup>
        <Folder Include="Application\Locations\Commands" />
        <Folder Include="Application\Students\Commands" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\EFCore.Postgres\EFCore.Postgres.csproj" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Pages\Error.cshtml" />
      <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Compile Remove="$(SpaRoot)build\**" />
        <Content Remove="$(SpaRoot)" />
        <Content Remove="$(SpaRoot)build\" />
        <Content Include="ClientApp\tsconfig.json" />
        <None Include="$(SpaRoot)" Exclude="$(SpaRoot)node_modules\;$(SpaRoot)build\**" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">

        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project." />

        <!-- Ensure Yarn is installed -->
        <Exec Command="npm --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Npm is required to build and run this project." />

        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>
    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
